Terminals unused in grammar

    ARRAY
    ERROR
    O_COMMENT
    C_COMMENT
    COLON


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration-list

    2 declaration-list: declaration declaration-list
    3                 | declaration

    4 declaration: var-declaration
    5            | fun-declaration

    6 var-declaration: type ID SEMICOLON
    7                | type ID O_BRACE NUM C_BRACE SEMICOLON

    8 type: INT
    9     | VOID

   10 fun-declaration: type ID O_PAREN param-list C_PAREN compound_stmt

   11 param-list: param COMMA param-list
   12           | param
   13           | ε

   14 param: type ID
   15      | type ID O_BRACE C_BRACE

   16 compound_stmt: O_BRACE local-declarations statement-list C_BRACE

   17 local-declarations: var-declaration local-declarations
   18                   | ε

   19 statement-list: statement statement-list
   20               | ε

   21 statement: expression_stmt
   22          | compound_stmt
   23          | selection_stmt
   24          | iteration_stmt
   25          | return_stmt

   26 expression_stmt: expression SEMICOLON

   27 selection_stmt: IF O_PAREN expression C_PAREN statement
   28               | IF O_PAREN expression C_PAREN statement ELSE statement

   29 iteration_stmt: WHILE O_PAREN expression C_PAREN statement

   30 return_stmt: RETURN SEMICOLON
   31            | RETURN expression SEMICOLON

   32 expression: var ASSIGN expression
   33           | simple_expression

   34 var: ID
   35    | ID O_BRACE expression C_BRACE

   36 simple_expression: additive_expression LESSER additive_expression
   37                  | additive_expression GREATER additive_expression
   38                  | additive_expression LESSER_EQ additive_expression
   39                  | additive_expression GREATER_EQ additive_expression
   40                  | additive_expression EQ additive_expression
   41                  | additive_expression NOT_EQ additive_expression
   42                  | additive_expression

   43 additive_expression: additive_expression PLUS term
   44                    | additive_expression MINUS term
   45                    | term

   46 term: term DIV factor
   47     | term MULT factor
   48     | factor

   49 factor: O_PAREN expression C_PAREN
   50       | var
   51       | call
   52       | NUM

   53 call: ID O_PAREN args C_PAREN

   54 args: arg_list
   55     | ε

   56 arg_list: expression COMMA arg_list
   57         | expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS (258) 43
    ARRAY (259)
    MULT (260) 47
    MINUS (261) 44
    DIV (262) 46
    O_PAREN (263) 10 27 28 29 49 53
    ERROR (264)
    C_PAREN (265) 10 27 28 29 49 53
    SEMICOLON (266) 6 7 26 30 31
    COMMA (267) 11 56
    NOT_EQ (268) 41
    ASSIGN (269) 32
    O_BRACE (270) 7 15 16 35
    C_BRACE (271) 7 15 16 35
    O_COMMENT (272)
    C_COMMENT (273)
    COLON (274)
    INT (275) 8
    VOID (276) 9
    LESSER (277) 36
    GREATER (278) 37
    LESSER_EQ (279) 38
    GREATER_EQ (280) 39
    EQ (281) 40
    ID <id> (282) 6 7 10 14 15 34 35 53
    NUM <num> (283) 7 52
    WHILE (284) 29
    IF (285) 27 28
    ELSE (286) 28
    RETURN (287) 30 31


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program <decl> (34)
        on left: 1
        on right: 0
    declaration-list <decl> (35)
        on left: 2 3
        on right: 1 2
    declaration <decl> (36)
        on left: 4 5
        on right: 2 3
    var-declaration <decl> (37)
        on left: 6 7
        on right: 4 17
    type <type> (38)
        on left: 8 9
        on right: 6 7 10 14 15
    fun-declaration <decl> (39)
        on left: 10
        on right: 5
    param-list <param> (40)
        on left: 11 12 13
        on right: 10 11
    param <param> (41)
        on left: 14 15
        on right: 11 12
    compound_stmt <stmt> (42)
        on left: 16
        on right: 10 22
    local-declarations <decl> (43)
        on left: 17 18
        on right: 16 17
    statement-list <stmt> (44)
        on left: 19 20
        on right: 16 19
    statement <stmt> (45)
        on left: 21 22 23 24 25
        on right: 19 27 28 29
    expression_stmt <stmt> (46)
        on left: 26
        on right: 21
    selection_stmt <stmt> (47)
        on left: 27 28
        on right: 23
    iteration_stmt <stmt> (48)
        on left: 29
        on right: 24
    return_stmt <stmt> (49)
        on left: 30 31
        on right: 25
    expression <expr> (50)
        on left: 32 33
        on right: 26 27 28 29 31 32 35 49 56 57
    var <var> (51)
        on left: 34 35
        on right: 32 50
    simple_expression <expr> (52)
        on left: 36 37 38 39 40 41 42
        on right: 33
    additive_expression <expr> (53)
        on left: 43 44 45
        on right: 36 37 38 39 40 41 42 43 44
    term <expr> (54)
        on left: 46 47 48
        on right: 43 44 45 46 47
    factor <expr> (55)
        on left: 49 50 51 52
        on right: 46 47 48
    call <stmt> (56)
        on left: 53
        on right: 51
    args <expr> (57)
        on left: 54 55
        on right: 53
    arg_list <expr> (58)
        on left: 56 57
        on right: 54 56


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration-list  go to state 4
    declaration       go to state 5
    var-declaration   go to state 6
    type              go to state 7
    fun-declaration   go to state 8


State 1

    8 type: INT •

    $default  reduce using rule 8 (type)


State 2

    9 type: VOID •

    $default  reduce using rule 9 (type)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration-list •

    $default  reduce using rule 1 (program)


State 5

    2 declaration-list: declaration • declaration-list
    3                 | declaration •

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 3 (declaration-list)

    declaration-list  go to state 10
    declaration       go to state 5
    var-declaration   go to state 6
    type              go to state 7
    fun-declaration   go to state 8


State 6

    4 declaration: var-declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var-declaration: type • ID SEMICOLON
    7                | type • ID O_BRACE NUM C_BRACE SEMICOLON
   10 fun-declaration: type • ID O_PAREN param-list C_PAREN compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun-declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration-list: declaration declaration-list •

    $default  reduce using rule 2 (declaration-list)


State 11

    6 var-declaration: type ID • SEMICOLON
    7                | type ID • O_BRACE NUM C_BRACE SEMICOLON
   10 fun-declaration: type ID • O_PAREN param-list C_PAREN compound_stmt

    O_PAREN    shift, and go to state 12
    SEMICOLON  shift, and go to state 13
    O_BRACE    shift, and go to state 14


State 12

   10 fun-declaration: type ID O_PAREN • param-list C_PAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 13 (param-list)

    type        go to state 15
    param-list  go to state 16
    param       go to state 17


State 13

    6 var-declaration: type ID SEMICOLON •

    $default  reduce using rule 6 (var-declaration)


State 14

    7 var-declaration: type ID O_BRACE • NUM C_BRACE SEMICOLON

    NUM  shift, and go to state 18


State 15

   14 param: type • ID
   15      | type • ID O_BRACE C_BRACE

    ID  shift, and go to state 19


State 16

   10 fun-declaration: type ID O_PAREN param-list • C_PAREN compound_stmt

    C_PAREN  shift, and go to state 20


State 17

   11 param-list: param • COMMA param-list
   12           | param •

    COMMA  shift, and go to state 21

    $default  reduce using rule 12 (param-list)


State 18

    7 var-declaration: type ID O_BRACE NUM • C_BRACE SEMICOLON

    C_BRACE  shift, and go to state 22


State 19

   14 param: type ID •
   15      | type ID • O_BRACE C_BRACE

    O_BRACE  shift, and go to state 23

    $default  reduce using rule 14 (param)


State 20

   10 fun-declaration: type ID O_PAREN param-list C_PAREN • compound_stmt

    O_BRACE  shift, and go to state 24

    compound_stmt  go to state 25


State 21

   11 param-list: param COMMA • param-list

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 13 (param-list)

    type        go to state 15
    param-list  go to state 26
    param       go to state 17


State 22

    7 var-declaration: type ID O_BRACE NUM C_BRACE • SEMICOLON

    SEMICOLON  shift, and go to state 27


State 23

   15 param: type ID O_BRACE • C_BRACE

    C_BRACE  shift, and go to state 28


State 24

   16 compound_stmt: O_BRACE • local-declarations statement-list C_BRACE

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 18 (local-declarations)

    var-declaration     go to state 29
    type                go to state 30
    local-declarations  go to state 31


State 25

   10 fun-declaration: type ID O_PAREN param-list C_PAREN compound_stmt •

    $default  reduce using rule 10 (fun-declaration)


State 26

   11 param-list: param COMMA param-list •

    $default  reduce using rule 11 (param-list)


State 27

    7 var-declaration: type ID O_BRACE NUM C_BRACE SEMICOLON •

    $default  reduce using rule 7 (var-declaration)


State 28

   15 param: type ID O_BRACE C_BRACE •

    $default  reduce using rule 15 (param)


State 29

   17 local-declarations: var-declaration • local-declarations

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 18 (local-declarations)

    var-declaration     go to state 29
    type                go to state 30
    local-declarations  go to state 32


State 30

    6 var-declaration: type • ID SEMICOLON
    7                | type • ID O_BRACE NUM C_BRACE SEMICOLON

    ID  shift, and go to state 33


State 31

   16 compound_stmt: O_BRACE local-declarations • statement-list C_BRACE

    O_PAREN  shift, and go to state 34
    O_BRACE  shift, and go to state 24
    ID       shift, and go to state 35
    NUM      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF       shift, and go to state 38
    RETURN   shift, and go to state 39

    $default  reduce using rule 20 (statement-list)

    compound_stmt        go to state 40
    statement-list       go to state 41
    statement            go to state 42
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 32

   17 local-declarations: var-declaration local-declarations •

    $default  reduce using rule 17 (local-declarations)


State 33

    6 var-declaration: type ID • SEMICOLON
    7                | type ID • O_BRACE NUM C_BRACE SEMICOLON

    SEMICOLON  shift, and go to state 13
    O_BRACE    shift, and go to state 14


State 34

   49 factor: O_PAREN • expression C_PAREN

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    expression           go to state 54
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 35

   34 var: ID •
   35    | ID • O_BRACE expression C_BRACE
   53 call: ID • O_PAREN args C_PAREN

    O_PAREN  shift, and go to state 55
    O_BRACE  shift, and go to state 56

    $default  reduce using rule 34 (var)


State 36

   52 factor: NUM •

    $default  reduce using rule 52 (factor)


State 37

   29 iteration_stmt: WHILE • O_PAREN expression C_PAREN statement

    O_PAREN  shift, and go to state 57


State 38

   27 selection_stmt: IF • O_PAREN expression C_PAREN statement
   28               | IF • O_PAREN expression C_PAREN statement ELSE statement

    O_PAREN  shift, and go to state 58


State 39

   30 return_stmt: RETURN • SEMICOLON
   31            | RETURN • expression SEMICOLON

    O_PAREN    shift, and go to state 34
    SEMICOLON  shift, and go to state 59
    ID         shift, and go to state 35
    NUM        shift, and go to state 36

    expression           go to state 60
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 40

   22 statement: compound_stmt •

    $default  reduce using rule 22 (statement)


State 41

   16 compound_stmt: O_BRACE local-declarations statement-list • C_BRACE

    C_BRACE  shift, and go to state 61


State 42

   19 statement-list: statement • statement-list

    O_PAREN  shift, and go to state 34
    O_BRACE  shift, and go to state 24
    ID       shift, and go to state 35
    NUM      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF       shift, and go to state 38
    RETURN   shift, and go to state 39

    $default  reduce using rule 20 (statement-list)

    compound_stmt        go to state 40
    statement-list       go to state 62
    statement            go to state 42
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 43

   21 statement: expression_stmt •

    $default  reduce using rule 21 (statement)


State 44

   23 statement: selection_stmt •

    $default  reduce using rule 23 (statement)


State 45

   24 statement: iteration_stmt •

    $default  reduce using rule 24 (statement)


State 46

   25 statement: return_stmt •

    $default  reduce using rule 25 (statement)


State 47

   26 expression_stmt: expression • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 48

   32 expression: var • ASSIGN expression
   50 factor: var •

    ASSIGN  shift, and go to state 64

    $default  reduce using rule 50 (factor)


State 49

   33 expression: simple_expression •

    $default  reduce using rule 33 (expression)


State 50

   36 simple_expression: additive_expression • LESSER additive_expression
   37                  | additive_expression • GREATER additive_expression
   38                  | additive_expression • LESSER_EQ additive_expression
   39                  | additive_expression • GREATER_EQ additive_expression
   40                  | additive_expression • EQ additive_expression
   41                  | additive_expression • NOT_EQ additive_expression
   42                  | additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS        shift, and go to state 65
    MINUS       shift, and go to state 66
    NOT_EQ      shift, and go to state 67
    LESSER      shift, and go to state 68
    GREATER     shift, and go to state 69
    LESSER_EQ   shift, and go to state 70
    GREATER_EQ  shift, and go to state 71
    EQ          shift, and go to state 72

    $default  reduce using rule 42 (simple_expression)


State 51

   45 additive_expression: term •
   46 term: term • DIV factor
   47     | term • MULT factor

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 45 (additive_expression)


State 52

   48 term: factor •

    $default  reduce using rule 48 (term)


State 53

   51 factor: call •

    $default  reduce using rule 51 (factor)


State 54

   49 factor: O_PAREN expression • C_PAREN

    C_PAREN  shift, and go to state 75


State 55

   53 call: ID O_PAREN • args C_PAREN

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    $default  reduce using rule 55 (args)

    expression           go to state 76
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53
    args                 go to state 77
    arg_list             go to state 78


State 56

   35 var: ID O_BRACE • expression C_BRACE

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    expression           go to state 79
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 57

   29 iteration_stmt: WHILE O_PAREN • expression C_PAREN statement

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    expression           go to state 80
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 58

   27 selection_stmt: IF O_PAREN • expression C_PAREN statement
   28               | IF O_PAREN • expression C_PAREN statement ELSE statement

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    expression           go to state 81
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 59

   30 return_stmt: RETURN SEMICOLON •

    $default  reduce using rule 30 (return_stmt)


State 60

   31 return_stmt: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 61

   16 compound_stmt: O_BRACE local-declarations statement-list C_BRACE •

    $default  reduce using rule 16 (compound_stmt)


State 62

   19 statement-list: statement statement-list •

    $default  reduce using rule 19 (statement-list)


State 63

   26 expression_stmt: expression SEMICOLON •

    $default  reduce using rule 26 (expression_stmt)


State 64

   32 expression: var ASSIGN • expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    expression           go to state 83
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 65

   43 additive_expression: additive_expression PLUS • term

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var     go to state 84
    term    go to state 85
    factor  go to state 52
    call    go to state 53


State 66

   44 additive_expression: additive_expression MINUS • term

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var     go to state 84
    term    go to state 86
    factor  go to state 52
    call    go to state 53


State 67

   41 simple_expression: additive_expression NOT_EQ • additive_expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var                  go to state 84
    additive_expression  go to state 87
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 68

   36 simple_expression: additive_expression LESSER • additive_expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var                  go to state 84
    additive_expression  go to state 88
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 69

   37 simple_expression: additive_expression GREATER • additive_expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var                  go to state 84
    additive_expression  go to state 89
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 70

   38 simple_expression: additive_expression LESSER_EQ • additive_expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var                  go to state 84
    additive_expression  go to state 90
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 71

   39 simple_expression: additive_expression GREATER_EQ • additive_expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var                  go to state 84
    additive_expression  go to state 91
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 72

   40 simple_expression: additive_expression EQ • additive_expression

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var                  go to state 84
    additive_expression  go to state 92
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 73

   47 term: term MULT • factor

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var     go to state 84
    factor  go to state 93
    call    go to state 53


State 74

   46 term: term DIV • factor

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    var     go to state 84
    factor  go to state 94
    call    go to state 53


State 75

   49 factor: O_PAREN expression C_PAREN •

    $default  reduce using rule 49 (factor)


State 76

   56 arg_list: expression • COMMA arg_list
   57         | expression •

    COMMA  shift, and go to state 95

    $default  reduce using rule 57 (arg_list)


State 77

   53 call: ID O_PAREN args • C_PAREN

    C_PAREN  shift, and go to state 96


State 78

   54 args: arg_list •

    $default  reduce using rule 54 (args)


State 79

   35 var: ID O_BRACE expression • C_BRACE

    C_BRACE  shift, and go to state 97


State 80

   29 iteration_stmt: WHILE O_PAREN expression • C_PAREN statement

    C_PAREN  shift, and go to state 98


State 81

   27 selection_stmt: IF O_PAREN expression • C_PAREN statement
   28               | IF O_PAREN expression • C_PAREN statement ELSE statement

    C_PAREN  shift, and go to state 99


State 82

   31 return_stmt: RETURN expression SEMICOLON •

    $default  reduce using rule 31 (return_stmt)


State 83

   32 expression: var ASSIGN expression •

    $default  reduce using rule 32 (expression)


State 84

   50 factor: var •

    $default  reduce using rule 50 (factor)


State 85

   43 additive_expression: additive_expression PLUS term •
   46 term: term • DIV factor
   47     | term • MULT factor

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 43 (additive_expression)


State 86

   44 additive_expression: additive_expression MINUS term •
   46 term: term • DIV factor
   47     | term • MULT factor

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 44 (additive_expression)


State 87

   41 simple_expression: additive_expression NOT_EQ additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 41 (simple_expression)


State 88

   36 simple_expression: additive_expression LESSER additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 36 (simple_expression)


State 89

   37 simple_expression: additive_expression GREATER additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 37 (simple_expression)


State 90

   38 simple_expression: additive_expression LESSER_EQ additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 38 (simple_expression)


State 91

   39 simple_expression: additive_expression GREATER_EQ additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 39 (simple_expression)


State 92

   40 simple_expression: additive_expression EQ additive_expression •
   43 additive_expression: additive_expression • PLUS term
   44                    | additive_expression • MINUS term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    $default  reduce using rule 40 (simple_expression)


State 93

   47 term: term MULT factor •

    $default  reduce using rule 47 (term)


State 94

   46 term: term DIV factor •

    $default  reduce using rule 46 (term)


State 95

   56 arg_list: expression COMMA • arg_list

    O_PAREN  shift, and go to state 34
    ID       shift, and go to state 35
    NUM      shift, and go to state 36

    expression           go to state 76
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53
    arg_list             go to state 100


State 96

   53 call: ID O_PAREN args C_PAREN •

    $default  reduce using rule 53 (call)


State 97

   35 var: ID O_BRACE expression C_BRACE •

    $default  reduce using rule 35 (var)


State 98

   29 iteration_stmt: WHILE O_PAREN expression C_PAREN • statement

    O_PAREN  shift, and go to state 34
    O_BRACE  shift, and go to state 24
    ID       shift, and go to state 35
    NUM      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF       shift, and go to state 38
    RETURN   shift, and go to state 39

    compound_stmt        go to state 40
    statement            go to state 101
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 99

   27 selection_stmt: IF O_PAREN expression C_PAREN • statement
   28               | IF O_PAREN expression C_PAREN • statement ELSE statement

    O_PAREN  shift, and go to state 34
    O_BRACE  shift, and go to state 24
    ID       shift, and go to state 35
    NUM      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF       shift, and go to state 38
    RETURN   shift, and go to state 39

    compound_stmt        go to state 40
    statement            go to state 102
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 100

   56 arg_list: expression COMMA arg_list •

    $default  reduce using rule 56 (arg_list)


State 101

   29 iteration_stmt: WHILE O_PAREN expression C_PAREN statement •

    $default  reduce using rule 29 (iteration_stmt)


State 102

   27 selection_stmt: IF O_PAREN expression C_PAREN statement •
   28               | IF O_PAREN expression C_PAREN statement • ELSE statement

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 27 (selection_stmt)]
    $default  reduce using rule 27 (selection_stmt)


State 103

   28 selection_stmt: IF O_PAREN expression C_PAREN statement ELSE • statement

    O_PAREN  shift, and go to state 34
    O_BRACE  shift, and go to state 24
    ID       shift, and go to state 35
    NUM      shift, and go to state 36
    WHILE    shift, and go to state 37
    IF       shift, and go to state 38
    RETURN   shift, and go to state 39

    compound_stmt        go to state 40
    statement            go to state 104
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 104

   28 selection_stmt: IF O_PAREN expression C_PAREN statement ELSE statement •

    $default  reduce using rule 28 (selection_stmt)
